
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.shuffle_instances.random_shuffle.shuffled[0][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "r5a.large",
          [32m+[0m[0m "t3a.medium",
          [32m+[0m[0m "m5a.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[1][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "c4.large",
          [32m+[0m[0m "t2.large",
          [32m+[0m[0m "m4.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[2][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "c6a.large",
          [32m+[0m[0m "r6a.large",
          [32m+[0m[0m "m6a.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[3][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "m6i.large",
          [32m+[0m[0m "i4i.large",
          [32m+[0m[0m "r6i.large",
          [32m+[0m[0m "c6i.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[4][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "r5.large",
          [32m+[0m[0m "t3.medium",
          [32m+[0m[0m "c5.large",
          [32m+[0m[0m "m5.xlarge",
          [32m+[0m[0m "i3en.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[5][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "m5n.large",
          [32m+[0m[0m "r5dn.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[6][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "i3.large",
          [32m+[0m[0m "r4.large",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[7][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "t3.2xlarge",
          [32m+[0m[0m "m5.large",
          [32m+[0m[0m "c5n.large",
          [32m+[0m[0m "z1d.large",
          [32m+[0m[0m "i3en.2xlarge",
          [32m+[0m[0m "r5d.4xlarge",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[8][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "m6i.16xlarge",
          [32m+[0m[0m "i4i.16xlarge",
          [32m+[0m[0m "r6i.16xlarge",
          [32m+[0m[0m "c6i.16xlarge",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1m  # module.shuffle_instances.random_shuffle.shuffled[9][0m will be created
[0m  [32m+[0m[0m resource "random_shuffle" "shuffled" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = [
          [32m+[0m[0m "i3.8xlarge",
          [32m+[0m[0m "r4.8xlarge",
        ]
      [32m+[0m[0m result = (known after apply)
    }

[1mPlan:[0m 10 to add, 0 to change, 0 to destroy.
[0m[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[3]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[6]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[7]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[0]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[4]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[8]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[2]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[1]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[9]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[5]: Creating...[0m[0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[3]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[9]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[1]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[7]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[0]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[6]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[2]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[5]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[8]: Creation complete after 0s [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[4]: Creation complete after 0s [id=-][0m
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mResource targeting is in effect[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0mYou are creating a plan with the -target option, which means that the
[33mâ”‚[0m [0mresult of this plan may not represent all of the changes requested by the
[33mâ”‚[0m [0mcurrent configuration.
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mThe -target option is not for routine use, and is provided only for
[33mâ”‚[0m [0mexceptional situations such as recovering from errors or mistakes, or when
[33mâ”‚[0m [0mTerraform specifically suggests to use it as part of an error message.
[33mâ•µ[0m[0m
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mApplied changes may be incomplete[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0mThe plan was created with the -target option in effect, so some changes
[33mâ”‚[0m [0mrequested in the configuration may have been ignored and the output values
[33mâ”‚[0m [0mmay not be fully updated. Run the following command to verify that no other
[33mâ”‚[0m [0mchanges are pending:
[33mâ”‚[0m [0m    terraform plan
[33mâ”‚[0m [0m	
[33mâ”‚[0m [0mNote that the -target option is not suitable for routine use, and is
[33mâ”‚[0m [0mprovided only for exceptional situations such as recovering from errors or
[33mâ”‚[0m [0mmistakes, or when Terraform specifically suggests to use it as part of an
[33mâ”‚[0m [0merror message.
[33mâ•µ[0m[0m
[0m[1m[32m
Apply complete! Resources: 10 added, 0 changed, 0 destroyed.
[0m[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[2]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[7]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[9]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[6]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[3]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[5]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[4]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[8]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[0]: Refreshing state... [id=-][0m
[0m[1mmodule.shuffle_instances.random_shuffle.shuffled[1]: Refreshing state... [id=-][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_security_group.ec2_security_group[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "ec2_security_group" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 8888
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 8888
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "migration_ec2_sg"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "migration_Security_group"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "migration_Security_group"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.efs_security_group[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "efs_security_group" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 2049
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 2049
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "migration_efs_sg"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.ec2[0].aws_instance.ec2[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "ec2" {
      [32m+[0m[0m ami                                  = "ami-0c7a974f58b92cfc6"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = "us-west-2a"
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "m5a.large"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "junho_us"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "container-migration-test_m5a.large"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "container-migration-test_m5a.large"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.ec2[0].aws_instance.ec2[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "ec2" {
      [32m+[0m[0m ami                                  = "ami-0c7a974f58b92cfc6"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = "us-west-2a"
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3a.medium"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "junho_us"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "container-migration-test_t3a.medium"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "container-migration-test_t3a.medium"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.ec2[0].aws_instance.ec2[2][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "ec2" {
      [32m+[0m[0m ami                                  = "ami-0c7a974f58b92cfc6"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = "us-west-2a"
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "r5a.large"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "junho_us"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "container-migration-test_r5a.large"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "container-migration-test_r5a.large"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.ec2[0].null_resource.init_inventory[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "init_inventory" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.ec2[0].null_resource.write_inventory[0][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "write_inventory" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.ec2[0].null_resource.write_inventory[1][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "write_inventory" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.ec2[0].null_resource.write_inventory[2][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "write_inventory" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.efs[0].aws_efs_file_system.efs[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_file_system" "efs" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m availability_zone_id    = (known after apply)
      [32m+[0m[0m availability_zone_name  = (known after apply)
      [32m+[0m[0m creation_token          = "migration_efs_0"
      [32m+[0m[0m dns_name                = (known after apply)
      [32m+[0m[0m encrypted               = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kms_key_id              = (known after apply)
      [32m+[0m[0m number_of_mount_targets = (known after apply)
      [32m+[0m[0m owner_id                = (known after apply)
      [32m+[0m[0m performance_mode        = "generalPurpose"
      [32m+[0m[0m size_in_bytes           = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "migration_efs_0"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name" = "migration_efs_0"
        }
      [32m+[0m[0m throughput_mode         = "bursting"
    }

[1m  # module.efs[0].aws_efs_mount_target.mount_target[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "mount_target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "migration_Igw"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "migration_Igw"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_route_table.route_table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route_table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m instance_id                = ""
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "migration_Route_table"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "migration_Route_table"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.route_table_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "route_table_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public_subnet[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.31.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = true
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "migration_Subnet"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "migration_Subnet"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "172.31.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "migration_VPC"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "migration_VPC"
        }
    }

[1mPlan:[0m 16 to add, 0 to change, 0 to destroy.
[0m[0m[1mmodule.efs[0].aws_efs_file_system.efs: Creating...[0m[0m
[0m[1mmodule.vpc.aws_vpc.vpc: Creating...[0m[0m
[0m[1mmodule.efs[0].aws_efs_file_system.efs: Creation complete after 7s [id=fs-03d0383f53d1630f7][0m
[0m[1mmodule.vpc.aws_vpc.vpc: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc.aws_vpc.vpc: Creation complete after 16s [id=vpc-0a451f36a9626de71][0m
[0m[1mmodule.vpc.aws_internet_gateway.igw: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.public_subnet: Creating...[0m[0m
[0m[1maws_security_group.efs_security_group: Creating...[0m[0m
[0m[1maws_security_group.ec2_security_group: Creating...[0m[0m
[0m[1mmodule.vpc.aws_internet_gateway.igw: Creation complete after 1s [id=igw-0e52b9138f7106f6f][0m
[0m[1mmodule.vpc.aws_route_table.route_table: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table.route_table: Creation complete after 2s [id=rtb-004da19c5ddf3af7a][0m
[0m[1maws_security_group.efs_security_group: Creation complete after 5s [id=sg-0b2b44c5d2cbf5530][0m
[0m[1maws_security_group.ec2_security_group: Creation complete after 5s [id=sg-0e3d8304b37fc0a73][0m
[0m[1mmodule.vpc.aws_subnet.public_subnet: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc.aws_subnet.public_subnet: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc.aws_subnet.public_subnet: Creation complete after 22s [id=subnet-03e53ebfab054848e][0m
[0m[1mmodule.vpc.aws_route_table_association.route_table_association: Creating...[0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.route_table_association: Creation complete after 1s [id=rtbassoc-02d215ec4acc95f16][0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.efs[0].aws_efs_mount_target.mount_target: Creation complete after 1m23s [id=fsmt-08af10c69c61e3caf][0m
[0m[1mmodule.ec2[0].aws_instance.ec2[0]: Creating...[0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[2]: Creating...[0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[1]: Creating...[0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[2]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.ec2[0].aws_instance.ec2[0]: Creation complete after 16s [id=i-080dbad07b30fd9db][0m
[0m[1mmodule.ec2[0].aws_instance.ec2[2]: Creation complete after 16s [id=i-072b3999feb4c1b7f][0m
[0m[1mmodule.ec2[0].aws_instance.ec2[1]: Creation complete after 16s [id=i-0f4785cecc66a673f][0m
[0m[1mmodule.ec2[0].null_resource.init_inventory: Creating...[0m[0m
[0m[1mmodule.ec2[0].null_resource.init_inventory: Provisioning with 'local-exec'...[0m[0m
[0m[1mmodule.ec2[0].null_resource.init_inventory (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "rm ../../ssh_scripts/inventory_0.txt || true"]
[0m[1mmodule.ec2[0].null_resource.init_inventory: Creation complete after 0s [id=5420792810752147095][0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[0]: Creating...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[2]: Creating...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[1]: Creating...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[0]: Provisioning with 'local-exec'...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[2]: Provisioning with 'local-exec'...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[0] (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "echo '54.201.56.229' >> ../../ssh_scripts/inventory_0.txt"]
[0m[1mmodule.ec2[0].null_resource.write_inventory[1]: Provisioning with 'local-exec'...[0m[0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[2] (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "echo '54.245.192.36' >> ../../ssh_scripts/inventory_0.txt"]
[0m[1mmodule.ec2[0].null_resource.write_inventory[1] (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "echo '52.10.105.248' >> ../../ssh_scripts/inventory_0.txt"]
[0m[1mmodule.ec2[0].null_resource.write_inventory[2]: Creation complete after 0s [id=5595200324463250570][0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[0]: Creation complete after 0s [id=4988038710105953307][0m
[0m[1mmodule.ec2[0].null_resource.write_inventory[1]: Creation complete after 0s [id=5535474519139015672][0m
[0m[1m[32m
Apply complete! Resources: 16 added, 0 changed, 0 destroyed.
[0m